// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartschoolApi.Model.Context;

#nullable disable

namespace SmartSchoolApi.Migrations
{
    [DbContext(typeof(SmartContext))]
    partial class SmartContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SmartschoolApi.Model.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_inicio");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("data_nascimento");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("sobrenome");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("aluno");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataInicio = new DateTime(2000, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1989, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Marta",
                            Sobrenome = "Kent",
                            Status = true,
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 2,
                            DataInicio = new DateTime(2000, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1989, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Paula",
                            Sobrenome = "Isabela",
                            Status = true,
                            Telefone = "(31)99898-878 7"
                        },
                        new
                        {
                            Id = 3,
                            DataInicio = new DateTime(2000, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1989, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Laura",
                            Sobrenome = "Antonia",
                            Status = true,
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 4,
                            DataInicio = new DateTime(2000, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1989, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Luiza",
                            Sobrenome = "Maria",
                            Status = true,
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 5,
                            DataInicio = new DateTime(2000, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1989, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Lucas",
                            Sobrenome = "Machado",
                            Status = true,
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 6,
                            DataInicio = new DateTime(2000, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1989, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Pedro",
                            Sobrenome = "Alvares",
                            Status = true,
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 7,
                            DataInicio = new DateTime(2000, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataNascimento = new DateTime(1989, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Paulo",
                            Sobrenome = "José",
                            Status = true,
                            Telefone = "(31)99898-8787"
                        });
                });

            modelBuilder.Entity("SmartschoolApi.Model.AlunoDisciplina", b =>
                {
                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("DisciplinaId")
                        .HasColumnType("int");

                    b.HasKey("AlunoId", "DisciplinaId");

                    b.HasIndex("DisciplinaId");

                    b.ToTable("AlunosDisciplinas");

                    b.HasData(
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 1,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 2,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 3,
                            DisciplinaId = 3
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 4,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 5,
                            DisciplinaId = 5
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 3
                        },
                        new
                        {
                            AlunoId = 6,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 1
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 2
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 3
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 4
                        },
                        new
                        {
                            AlunoId = 7,
                            DisciplinaId = 5
                        });
                });

            modelBuilder.Entity("SmartschoolApi.Model.Disciplina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("disciplina");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descricao = "Matemática",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Descricao = "Física",
                            ProfessorId = 2
                        },
                        new
                        {
                            Id = 3,
                            Descricao = "Português",
                            ProfessorId = 3
                        },
                        new
                        {
                            Id = 4,
                            Descricao = "Inglês",
                            ProfessorId = 4
                        },
                        new
                        {
                            Id = 5,
                            Descricao = "Programação",
                            ProfessorId = 5
                        });
                });

            modelBuilder.Entity("SmartschoolApi.Model.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nome");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("sobrenome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("telefone");

                    b.HasKey("Id");

                    b.ToTable("professor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Lauro",
                            Sobrenome = "Professor",
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Roberto",
                            Sobrenome = "Professor",
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Ronaldo",
                            Sobrenome = "Professor",
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Rodrigo",
                            Sobrenome = "Professor",
                            Telefone = "(31)99898-8787"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Alexandre",
                            Sobrenome = "Professor",
                            Telefone = "(31)99898-8787"
                        });
                });

            modelBuilder.Entity("SmartschoolApi.Model.AlunoDisciplina", b =>
                {
                    b.HasOne("SmartschoolApi.Model.Aluno", "Aluno")
                        .WithMany("AlunoDisciplinas")
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmartschoolApi.Model.Disciplina", "Disciplina")
                        .WithMany()
                        .HasForeignKey("DisciplinaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Disciplina");
                });

            modelBuilder.Entity("SmartschoolApi.Model.Disciplina", b =>
                {
                    b.HasOne("SmartschoolApi.Model.Professor", "Professor")
                        .WithMany("Disciplinas")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("SmartschoolApi.Model.Aluno", b =>
                {
                    b.Navigation("AlunoDisciplinas");
                });

            modelBuilder.Entity("SmartschoolApi.Model.Professor", b =>
                {
                    b.Navigation("Disciplinas");
                });
#pragma warning restore 612, 618
        }
    }
}
